{"version":3,"sources":["app/boot.coffee","app/config.coffee","app/controllers/app/classified/new.coffee","app/controllers/dashboard/analytics/index.coffee","app/controllers/example-controller.coffee","app/helpers.coffee","app/helpers/keenio.coffee","app/initialize.coffee","app/validators.coffee","core/bootstrap.coffee","core/controller.coffee","core/view.coffee"],"names":[],"mappings":"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","file":"../priv/static/javascripts/app.js","sourcesContent":["#--------------------------------------------------------------------------\n# Boot\n#--------------------------------------------------------------------------\n#\n# It's the right place to put some code to execute globally like\n# the init of jQuery plugins, etc.\n##\n\n# Noty configuration\n$.noty.defaults.timeout = 2500\n$.noty.defaults.animation.open = 'animated flipInX'\n$.noty.defaults.animation.close = 'animated flipOutX'\n$.noty.defaults.maxVisible = 1\n$.noty.defaults.killer = true\n$.noty.defaults.dismissQueue = false\n\n\n# Flash system\nif $('[data-flash]').length && $('[data-flash]').first().text() != \"\"\n\n    $flash = $('[data-flash').first()\n    type = $flash.data('flash')\n    text = $flash.html()\n\n    noty({\n        type: type\n        text: text\n    })\n\n# Autosize textarea\nif $('.js-autosize').length\n    autosize($('.js-autosize'))\n","#--------------------------------------------------------------------------\n# Config\n#--------------------------------------------------------------------------\n#\n# Sometimes you need to put some configuration variables for your project,\n# here it's the right place for that !\n#\n# Config = require 'config'\n# console.log Config.app.name\n##\n\nmodule.exports =\n\n    # Example\n    app:\n        name: 'My Gotham Application'\n        version: 0.1\n\n    keenio:\n        dev:\n            projectId: '57aeaf313831444167e1fa35'\n            readKey: '410e0b58f9d6c3371cd296341701dc9758bd8b47d9def44aff868ba6cfd54dfe394b8eb113a55c8dc4df2042975da73e7bcc9e397e1e8ca48f75607fd2caa712359db81d2cc304029fc6b20cc34795344551caf82419a8744bc650f9a8b910ac'\n\n    env: () =>\n\n        $selector = $('#app-config[data-environment]')\n\n        if $selector.length\n            return $selector.data('environment')\n        else\n            console.log(\"[WARNING] Environment not specified, fallback to prod\")\n            return 'prod'\n","# Require the controller library of Gotham\nController = require 'core/controller'\n\n\nclass Classified_New extends Controller\n\n    ##\n    # Before\n    #\n    # Executed before the run action. You can use\n    # @stop() in this method to stop the execution\n    # of the controller\n    #\n    ##\n    before: ->\n\n        @on 'keyup', '#classified_description', @changeCharsCount\n\n    ##\n    # Run\n    #\n    # The main entry of the controller.\n    # Your code start here\n    #\n    ##\n    run: ->\n\n        @initBirthdayMask()\n        @initCharsCount()\n        @initAutosize()\n\n    ##\n    # Init the mark birthday to help the user to format correctly his answer\n    ##\n    initBirthdayMask: =>\n\n        $('#classified_birthday').inputmask('99/99/9999', {placeholder: \"jj/mm/aaaa\"})\n\n    ##\n    # Set the counter of chars to his initial state\n    ##\n    initCharsCount: =>\n\n        length = $('#classified_description').val().length\n\n        @setCharsCount(length)\n\n    ##\n    # When the description change\n    ##\n    changeCharsCount: =>\n\n        count = $('#classified_description').val().length\n\n        @setCharsCount(count)\n\n    ##\n    # Set a new state for the counter\n    ##\n    setCharsCount: (number) =>\n\n        $chars = $('#chars')\n        minimum = $chars.data('min')\n\n        text = $chars.data('text-number') + ': ' + number + ' (' + $chars.data('text-minimum') + ': ' + minimum + ')'\n\n        $chars.html text\n\n        if number < minimum\n            $chars.css('color', '#E3000E') # Red\n        else\n            $chars.css('color', '#71BA51') # Green\n\n    ##\n    # Will autoresize the description when the user write his description\n    ##\n    initAutosize: =>\n        autosize($('#classified_description'))\n\n# Export\nmodule.exports = Classified_New\n","# Require the controller library of Gotham\nController = require 'core/controller'\nKeenio = require 'helpers/keenio'\n\nclass Dashboard_Analytics_Index extends Controller\n\n    ##\n    # Before\n    #\n    # Executed before the run action. You can use\n    # @stop() in this method to stop the execution\n    # of the controller\n    #\n    ##\n    before: ->\n\n        @setupStats()\n\n    ##\n    # Run\n    #\n    # The main entry of the controller.\n    # Your code start here\n    #\n    ##\n    run: ->\n\n\n    setupStats: ->\n\n        client = new Keenio().client\n        colors = ['#60646D']\n\n        Keen.ready ->\n\n            query = new Keen.Query 'count', {\n                eventCollection: 'classified.new'\n                timeframe: 'this_10_years'\n                timezone: 'UTC'\n            }\n\n            client.draw(query, document.getElementById('total-classified'), {\n                title: 'Total Classified',\n                colors: colors\n            })\n\n            query = new Keen.Query 'count', {\n                eventCollection: \"classified.new\"\n                timeframe: \"this_7_days\"\n                timezone: \"UTC\"\n            }\n\n            client.draw(query, document.getElementById('total-classified-7-days'), {\n                title: 'Added this last 7 days',\n                colors: colors\n            })\n\n\n            query = new Keen.Query 'count', {\n                eventCollection: \"classified.new\"\n                timeframe: \"this_1_days\"\n                timezone: \"UTC\"\n            }\n\n            client.draw(query, document.getElementById('total-classified-today'), {\n                title: 'Added today',\n                colors: colors\n            })\n\n\n\n\n\n# Export\nmodule.exports = Dashboard_Analytics_Index\n","#--------------------------------------------------------------------------\n# Example Controller\n#--------------------------------------------------------------------------\n#\n# That controller is just an example.\n#\n# @see http://gothamjs.io/documentation/1.0.0/controllers\n##\n\n# Require the controller library of Gotham\nController = require 'core/controller'\n\n\nclass Example extends Controller\n\n  ##\n  # Before\n  #\n  # Executed before the run action. You can use\n  # @stop() in this method to stop the execution\n  # of the controller\n  #\n  ##\n  before: ->\n\n  ##\n  # Run\n  #\n  # The main entry of the controller.\n  # Your code start here\n  #\n  ##\n  run: ->\n\n\n# Export\nmodule.exports = Example\n","#--------------------------------------------------------------------------\n# Helpers\n#--------------------------------------------------------------------------\n#\n# If you need to create some functions to use in your application, you are\n# in the right place !\n#\n# Gotham uses lo-dash and the concept of mixins.\n#\n# @see http://gothamjs.iodocumentation/1.0.0/helpers\n##\n\n##\n# Example\n#\n# Check if the user is batman\n#\n# @param [string] Name of the user\n##\n_.mixin isBatman: (name) ->\n\n  if name.toLowerCase() is \"batman\"\n    return true\n\n  return false\n","Config = require 'config'\n\nclass Helpers_Keenio\n\n    constructor: ->\n\n        @keys = Config.keenio[Config.env()]\n\n        @client = new Keen({\n            projectId: @keys.projectId\n            readKey: @keys.readKey\n            })\n\nmodule.exports = Helpers_Keenio\n","#--------------------------------------------------------------------------\n# Initialize\n#--------------------------------------------------------------------------\n#\n# It's the main entry of your gotham application. We will require the\n# bootstrap file and run gotham.\n##\nBootstrap = require 'core/bootstrap'\n\n# Hey sir, is the document ready ?\n$ ->\n\n  # Yep ! We will run gotham !\n  bootstrap = new Bootstrap()\n  bootstrap.run()\n","#--------------------------------------------------------------------------\n# Errors\n#--------------------------------------------------------------------------\n#\n# If you want to change / add errors for the Validator library, you can\n# do it here.\n#\n# @see http://gothamjs.io/documentation/1.0.0/validator#custom-error\n##\nValidator.errors\n\n#--------------------------------------------------------------------------\n# Attributes\n#--------------------------------------------------------------------------\n#\n# If you want to change / add attributes for the Validator library, you can\n# do it here.\n#\n# @see http://gothamjs.io/documentation/1.0.0/validator#change-attributes\n##\nValidator.attributes\n","##\n# Bootstrap\n#\n# Skeleton of gotham\n##\nclass Bootstrap\n\n  ##\n  # Run\n  #\n  # Load the helpers, start, and invoke the controller\n  ##\n  run: ->\n\n    # Load lo-dash helpers\n    require 'helpers'\n\n    # Load custom validators\n    require 'validators'\n\n    # Load boot\n    require 'boot'\n\n    # Fetch the controller to execute\n    controller = $('#app').data('controller')\n\n    # No controller defined\n    unless controller?\n      return\n\n    # Controller defined is empty\n    if _.isEmpty(controller)\n      return\n\n    # Format to the right path\n    pathController = @_formatPath(controller)\n\n    # Invoke controller\n    controller = require 'controllers/' + pathController\n    controller  = new controller($('#app').data())\n\n    # Check if we have a method before\n    if controller['before']?\n\n      # Run the before method\n      controller.before()\n\n    unless controller._gothamStop\n\n      # Run the controller\n      controller.run()\n\n  ##\n  # Format path\n  #\n  # Will replace all dots by a slash\n  #\n  # @param [String] The string to format\n  #\n  ##\n  _formatPath: (str) ->\n\n    str.split('.').join('/')\n\n\nmodule.exports = Bootstrap","View = require 'core/view'\n\n##\n# Controller\n#\n# Basic controller structure.\n##\nclass Controller\n\n  # Flag to know if we must run or not the controller\n  # It's linked with the before() method.\n  _gothamStop: false\n\n  ##\n  # Constructor\n  #\n  # The constructor\n  #\n  ##\n  constructor: (options) ->\n\n    @options = options\n\n  ##\n  # Stop\n  #\n  # If we call this method in the before method,\n  # it will not execute the run() method\n  #\n  ##\n  stop: ->\n\n    @_gothamStop = true\n\n  ##\n  # Log\n  #\n  # Shortcut to display a console.log\n  #\n  # @param [Mixed] Value to display\n  #\n  ##\n  log: (value) ->\n\n    console.log(value)\n\n  ##\n  # On\n  #\n  # Shortcut to create a jquery \"on\" event\n  #\n  # @param [String] Trigger to listen (Ex. click)\n  # @param [String] The selector to attach\n  # @param [Function] The callback\n  #\n  ##\n  on: (trigger, selector, handler) ->\n\n    $(selector).on trigger, handler\n\n  ##\n  # Off\n  #\n  # Shortcut to create a jquery \"off\" event\n  #\n  # @param [String] Trigger to shutdown (Ex. click)\n  # @param [String] The selector attached\n  # @param [Function] The handler\n  #\n  ##\n  off: (trigger, selector, handler) ->\n\n    $(selector).off trigger, handler\n\n  ##\n  # Delayed\n  #\n  # Like \"on\" jquery event but listen new elements\n  # added in the page\n  #\n  # @param [String] Trigger to listen (Ex. click)\n  # @param [String] The selector to attach\n  # @param [Function] The callback\n  #\n  ##\n  delayed: (trigger, selector, handler) ->\n\n    $(document).on trigger, selector, handler\n\n  ##\n  # View\n  #\n  # Shortcut to render a view\n  #\n  # @param [String] View to render\n  # @param [Object] Datas to compile in the view\n  #\n  ##\n  view: (template, datas) ->\n\n    view = new View()\n\n    return view.render template, datas\n\nmodule.exports = Controller\n","##\n# View\n#\n# Micro-Facade for Handlebars.\n##\nclass View\n\n  ##\n  # Constructor\n  #\n  # The constructor\n  #\n  ##\n  constructor: ->\n\n  ##\n  # Render\n  #\n  # Render a template\n  #\n  # @param [String] Template to compile\n  # @param [Object] Datas to compile with the template\n  #\n  ##\n  render: (template, datas) ->\n\n    template = template.split('.').join('/')\n\n    template = require 'views/' + template\n\n    return template(datas)\n\nmodule.exports = View\n"]}