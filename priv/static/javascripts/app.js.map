{"version":3,"sources":["app/boot.coffee","app/config.coffee","app/controllers/app/classified/new.coffee","app/controllers/app/classified/show.coffee","app/controllers/dashboard/analytics/index.coffee","app/controllers/example-controller.coffee","app/helpers.coffee","app/helpers/keenio.coffee","app/initialize.coffee","app/validators.coffee","core/bootstrap.coffee","core/controller.coffee","core/view.coffee"],"names":[],"mappings":"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","file":"../priv/static/javascripts/app.js","sourcesContent":["#--------------------------------------------------------------------------\n# Boot\n#--------------------------------------------------------------------------\n#\n# It's the right place to put some code to execute globally like\n# the init of jQuery plugins, etc.\n##\nclass Boot\n\n  constructor: ->\n    @setupNoty()\n    @setupFlash()\n    @setupAutosize()\n    @setupConfirm()\n\n  ##\n  # Setup the base configuration of noty\n  ##\n  setupNoty: ->\n\n    # Noty configuration\n    $.noty.defaults.timeout = 2500\n    $.noty.defaults.animation.open = 'animated flipInX'\n    $.noty.defaults.animation.close = 'animated flipOutX'\n    $.noty.defaults.maxVisible = 1\n    $.noty.defaults.killer = true\n    $.noty.defaults.dismissQueue = false\n\n  ##\n  # When a flash message is present in the DOM\n  # let's display it in an noty alert\n  ##\n  setupFlash: ->\n\n    # Flash system\n    $flash = $('[data-flash]').filter (i, v) ->\n      $(v).text() != ''\n\n    if $flash.length\n      type = $flash.first().data('flash')\n      text = $flash.first().html()\n      \n      noty({\n        type: type\n        text: text\n      })\n\n  ##\n  # Textarea suck. Let's improve them.\n  ##\n  setupAutosize: ->\n\n    # Autosize textarea\n    if $('.js-autosize').length\n      autosize($('.js-autosize'))\n\n  ##\n  # Will display an alert confirmation if you click\n  # on a data-confirm link\n  ##\n  setupConfirm: ->\n\n    # Confirm\n    $('[data-confirm]').each ->\n\n      text = $(this).data('confirm')\n      url = $(this).attr('href')\n\n      $(this).on 'click', (e) ->\n\n        e.preventDefault()\n\n        swal({\n          title: $('#app-config').data('confirm-title') || '',\n          text: text\n          type: 'warning',\n          showCancelButton: true\n        }, ->\n          window.location.href = url\n        )\n\nmodule.exports = Boot\n","#--------------------------------------------------------------------------\n# Config\n#--------------------------------------------------------------------------\n#\n# Sometimes you need to put some configuration variables for your project,\n# here it's the right place for that !\n#\n# Config = require 'config'\n# console.log Config.app.name\n##\n\nmodule.exports =\n\n  keenio:\n    dev:\n      projectId: \"57aeaf313831444167e1fa35\"\n      writeKey: \"b90d7934bb1d121351a8cad5ec0b4687a81f86e47186d2812cf531f3e7bb62025622b50482fa18d03565d7815f0eaebab74a444af9b7dbfa94fc7621eec1e8ef786da80339a9b642402c893a52b8967a5b7241df69783d2c782ed66f82f1cc47\"\n      readKey: \"410e0b58f9d6c3371cd296341701dc9758bd8b47d9def44aff868ba6cfd54dfe394b8eb113a55c8dc4df2042975da73e7bcc9e397e1e8ca48f75607fd2caa712359db81d2cc304029fc6b20cc34795344551caf82419a8744bc650f9a8b910ac\"\n\n  env: () =>\n    $selector = $('#app-config[data-environment]')\n\n    if $selector.length\n      return $selector.data('environment')\n    else\n      console.log(\"[WARNING] Environment not specified, fallback to prod\")\n      return 'prod'\n","# Require the controller library of Gotham\nController = require 'core/controller'\n\nclass Classified_New extends Controller\n\n  ##\n  # Before\n  #\n  # Executed before the run action. You can use\n  # @stop() in this method to stop the execution\n  # of the controller\n  #\n  ##\n  before: ->\n\n    @on 'keyup', '#classified_description', @changeCharsCount\n\n  ##\n  # Run\n  #\n  # The main entry of the controller.\n  # Your code start here\n  #\n  ##\n  run: ->\n\n    @initBirthdayMask()\n    @initCharsCount()\n    @initAutosize()\n\n  ##\n  # Init the mark birthday to help the user to format correctly his answer\n  ##\n  initBirthdayMask: =>\n\n    $('#classified_birthday').inputmask('99/99/9999', {placeholder: \"jj/mm/aaaa\"})\n\n  ##\n  # Set the counter of chars to his initial state\n  ##\n  initCharsCount: =>\n\n    length = $('#classified_description').val().length\n    @setCharsCount(length)\n\n  ##\n  # When the description change\n  ##\n  changeCharsCount: =>\n\n    count = $('#classified_description').val().length\n    @setCharsCount(count)\n\n  ##\n  # Set a new state for the counter\n  ##\n  setCharsCount: (number) =>\n\n    $chars = $('#chars')\n    minimum = $chars.data('min')\n\n    text = $chars.data('text-number') + ': ' + number + ' (' + $chars.data('text-minimum') + ': ' + minimum + ')'\n\n    $chars.html text\n\n    if number < minimum\n        $chars.css('color', '#E3000E') # Red\n    else\n        $chars.css('color', '#71BA51') # Green\n\n  ##\n  # Will autoresize the description when the user write his description\n  ##\n  initAutosize: =>\n    autosize($('#classified_description'))\n\n# Export\nmodule.exports = Classified_New\n","# Require the controller library of Gotham\nController = require 'core/controller'\nKeenio = require 'helpers/keenio'\n\n\nclass Classified_Show extends Controller\n\n  ##\n  # Before\n  #\n  # Executed before the run action. You can use\n  # @stop() in this method to stop the execution\n  # of the controller\n  #\n  ##\n  before: ->\n\n    @on 'click', '#show-phone', @onShowPhone\n\n  ##\n  # Run\n  #\n  # The main entry of the controller.\n  # Your code start here\n  #\n  ##\n  run: ->\n\n    # Send event new show classified\n    client = new Keenio().client.addEvent(\"classified.show\", {\n      classified_id: $('#app').data('classified')\n    })\n\n  ##\n  # Display full phone\n  ##\n  onShowPhone: ->\n\n    # Display phone\n    $phone = $('#phone')\n    $phone.html($phone.data('phone'))\n\n    # Remove button\n    $(this).remove()\n\n    # Send event keen.io\n    client = new Keenio().client.addEvent(\"classified.show_phone\", {\n      classified_id: $('#app').data('classified')\n    })\n\n# Export\nmodule.exports = Classified_Show\n","# Require the controller library of Gotham\nController = require 'core/controller'\nKeenio = require 'helpers/keenio'\n\nclass Dashboard_Analytics_Index extends Controller\n\n  ##\n  # Before\n  #\n  # Executed before the run action. You can use\n  # @stop() in this method to stop the execution\n  # of the controller\n  #\n  ##\n  before: ->\n\n  ##\n  # Run\n  #\n  # The main entry of the controller.\n  # Your code start here\n  #\n  ##\n  run: ->\n    \n\n# Export\nmodule.exports = Dashboard_Analytics_Index\n","#--------------------------------------------------------------------------\n# Example Controller\n#--------------------------------------------------------------------------\n#\n# That controller is just an example.\n#\n# @see http://gothamjs.io/documentation/1.0.0/controllers\n##\n\n# Require the controller library of Gotham\nController = require 'core/controller'\n\n\nclass Example extends Controller\n\n  ##\n  # Before\n  #\n  # Executed before the run action. You can use\n  # @stop() in this method to stop the execution\n  # of the controller\n  #\n  ##\n  before: ->\n\n  ##\n  # Run\n  #\n  # The main entry of the controller.\n  # Your code start here\n  #\n  ##\n  run: ->\n\n\n# Export\nmodule.exports = Example\n","#--------------------------------------------------------------------------\n# Helpers\n#--------------------------------------------------------------------------\n#\n# If you need to create some functions to use in your application, you are\n# in the right place !\n#\n# Gotham uses lo-dash and the concept of mixins.\n#\n# @see http://gothamjs.iodocumentation/1.0.0/helpers\n##\n\n##\n# Example\n#\n# Check if the user is batman\n#\n# @param [string] Name of the user\n##\n_.mixin isBatman: (name) ->\n\n  if name.toLowerCase() is \"batman\"\n    return true\n\n  return false\n","Config = require 'config'\n\nclass Helpers_Keenio\n\n  constructor: ->\n\n    @keys = Config.keenio[Config.env()]\n\n    @client = new Keen({\n      projectId: @keys.projectId\n      readKey: @keys.readKey,\n      writeKey: @keys.writeKey\n    })\n\n\nmodule.exports = Helpers_Keenio\n","#--------------------------------------------------------------------------\n# Initialize\n#--------------------------------------------------------------------------\n#\n# It's the main entry of your gotham application. We will require the\n# bootstrap file and run gotham.\n##\nBootstrap = require 'core/bootstrap'\n\nboot = ->\n  bootstrap = new Bootstrap()\n  bootstrap.run()\n\n# Hey sir, is the document ready ?\n$ ->\n\n  ##\n  # SmoothState\n  #\n  # Init smoothstate to avoid \"blink\" pages during transitions\n  ##\n  $('#main').smoothState({\n    debug: true\n    blacklist: '.js-no-smoothstate'\n    cacheLength: 0\n    forms: 'form'\n    onStart: {\n      duration: 0,\n      render: ($container) ->\n        NProgress.start()\n    }\n    onAfter: ($container, $newContent) ->\n\n      NProgress.done()\n\n      # Let's clear the cache (else the form are fucked up.)\n      $('#main').smoothState().data('smoothState').clear()\n\n      # Let's scroll back to the top\n      $('html, body').animate({ scrollTop: 0 }, 0);\n      \n      # The content just changed\n      # let's reboot.\n      boot()\n  })\n\n  # Let's boot\n  boot()","#--------------------------------------------------------------------------\n# Errors\n#--------------------------------------------------------------------------\n#\n# If you want to change / add errors for the Validator library, you can\n# do it here.\n#\n# @see http://gothamjs.io/documentation/1.0.0/validator#custom-error\n##\nValidator.errors\n\n#--------------------------------------------------------------------------\n# Attributes\n#--------------------------------------------------------------------------\n#\n# If you want to change / add attributes for the Validator library, you can\n# do it here.\n#\n# @see http://gothamjs.io/documentation/1.0.0/validator#change-attributes\n##\nValidator.attributes\n","##\n# Bootstrap\n#\n# Skeleton of gotham\n##\nclass Bootstrap\n\n  ##\n  # Run\n  #\n  # Load the helpers, start, and invoke the controller\n  ##\n  run: ->\n    \n    # Load lo-dash helpers\n    require 'helpers'\n\n    # Load custom validators\n    require 'validators'\n\n    # Load boot\n    Boot = require 'boot'\n    new Boot()\n\n    # Fetch the controller to execute\n    controller = $('#app').data('controller')\n\n    # No controller defined\n    unless controller?\n      return\n\n    # Controller defined is empty\n    if _.isEmpty(controller)\n      return\n\n    # Format to the right path\n    pathController = @_formatPath(controller)\n\n    # Invoke controller\n    controller = require 'controllers/' + pathController\n    controller  = new controller($('#app').data())\n\n    # Check if we have a method before\n    if controller['before']?\n\n      # Run the before method\n      controller.before()\n\n    unless controller._gothamStop\n\n      # Run the controller\n      controller.run()\n\n  ##\n  # Format path\n  #\n  # Will replace all dots by a slash\n  #\n  # @param [String] The string to format\n  #\n  ##\n  _formatPath: (str) ->\n\n    str.split('.').join('/')\n\n\nmodule.exports = Bootstrap","View = require 'core/view'\n\n##\n# Controller\n#\n# Basic controller structure.\n##\nclass Controller\n\n  # Flag to know if we must run or not the controller\n  # It's linked with the before() method.\n  _gothamStop: false\n\n  ##\n  # Constructor\n  #\n  # The constructor\n  #\n  ##\n  constructor: (options) ->\n\n    @options = options\n\n  ##\n  # Stop\n  #\n  # If we call this method in the before method,\n  # it will not execute the run() method\n  #\n  ##\n  stop: ->\n\n    @_gothamStop = true\n\n  ##\n  # Log\n  #\n  # Shortcut to display a console.log\n  #\n  # @param [Mixed] Value to display\n  #\n  ##\n  log: (value) ->\n\n    console.log(value)\n\n  ##\n  # On\n  #\n  # Shortcut to create a jquery \"on\" event\n  #\n  # @param [String] Trigger to listen (Ex. click)\n  # @param [String] The selector to attach\n  # @param [Function] The callback\n  #\n  ##\n  on: (trigger, selector, handler) ->\n\n    $(selector).on trigger, handler\n\n  ##\n  # Off\n  #\n  # Shortcut to create a jquery \"off\" event\n  #\n  # @param [String] Trigger to shutdown (Ex. click)\n  # @param [String] The selector attached\n  # @param [Function] The handler\n  #\n  ##\n  off: (trigger, selector, handler) ->\n\n    $(selector).off trigger, handler\n\n  ##\n  # Delayed\n  #\n  # Like \"on\" jquery event but listen new elements\n  # added in the page\n  #\n  # @param [String] Trigger to listen (Ex. click)\n  # @param [String] The selector to attach\n  # @param [Function] The callback\n  #\n  ##\n  delayed: (trigger, selector, handler) ->\n\n    $(document).on trigger, selector, handler\n\n  ##\n  # View\n  #\n  # Shortcut to render a view\n  #\n  # @param [String] View to render\n  # @param [Object] Datas to compile in the view\n  #\n  ##\n  view: (template, datas) ->\n\n    view = new View()\n\n    return view.render template, datas\n\nmodule.exports = Controller\n","##\n# View\n#\n# Micro-Facade for Handlebars.\n##\nclass View\n\n  ##\n  # Constructor\n  #\n  # The constructor\n  #\n  ##\n  constructor: ->\n\n  ##\n  # Render\n  #\n  # Render a template\n  #\n  # @param [String] Template to compile\n  # @param [Object] Datas to compile with the template\n  #\n  ##\n  render: (template, datas) ->\n\n    template = template.split('.').join('/')\n\n    template = require 'views/' + template\n\n    return template(datas)\n\nmodule.exports = View\n"]}